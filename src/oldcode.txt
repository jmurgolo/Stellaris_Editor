//        String parent = null;
//        line_text = lt;
//        temp_text = lt.replaceAll("'", "''");
//        int level_holder = 0;

//so I only have one insert statement but need to do a shift for the {} at condition 0
//       int level_adjuster = 0;


//
//        switch (check) {
//            case 0:
//                getNodeInfo(temp_text);
//                if (level == 0) {
//                    parent = "none";
//                    root_node_tracker = root_node_tracker + 1;
//                    level_holder = root_node_tracker;
//                } else {
//                    parent = level_name[level - 1];
//                }
//                setTreeLimb(0);
//                level_adjuster = +1;
//                action = "open and close";
//                //node = "<" + standardizeNodeName(node_name) + ">"
//                //        + standardizeNodeName(node_content)
//                //        + "</" + standardizeNodeName(node_name) + ">";
//                break;
//            case 1:
//                getNodeInfo(temp_text);
//                if (level == 0) {
//                    parent = "none";
//                    root_node_tracker = root_node_tracker + 1;
//                    level_holder = root_node_tracker;
//                } else {
//                    parent = level_name[level - 1];
//                    level_holder = root_node_tracker;
//                }
//                setTreeLimb(1);
//                action = "open";
//                level = level + 1;
//                //node = "<" + node_name + ">";
//                break;
//            case 2:
//                getNodeInfo(temp_text);
//                parent = level_name[level - 1];
//                action = "close";
//                level = level - 1;
//                level_holder = level;
//                //node = "</" + standardizeNodeName(level_name[level]) + ">";
//                setTreeLimb(-1);
//                break;
//            case 3:
//                getNodeInfo(temp_text);
//                if(level == 0) {
//                    parent = "none";
//                }else{
//                    parent = level_name[level-1];
//                }
//                action = "none";
//                //node = "<" + node_name + ">"
//                //        + node_content
//                //        + "</" + node_name + ">";
//                break;
//        }

//        System.out.println(
//                " a| " + (line) + "\t"
//                        + " b| " + level_depth_array_place + "\t"
//                        + " c| " + leveldepthlist.size() + "\t"
//                        + " d| " + root_node_tracker + "\t"
//                        + " e| " + check + "\t"
//                        //+ " f| " + leveldepthlist.subList(0,level_depth_array_place+2).toString() + "\t"
//                        + " f| " + leveldepthlist.toString() + "\t"
//
//        );


//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).linenumber = line;
//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).nodelevel = level + level_adjuster;
//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).nodename = ((node_name == null) ? "" : node_name);
//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).nodevalue = node_content;
//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).nodeparent = parent;
//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).openorclose = action;
//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).originalnodename = ((original_node_name == null) ? "" : original_node_name);
//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).originalnodevalue = original_node_value;
//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).nodepath = level_holder;
//        Main.sfe_arraylist.get(Main.sfe_arraylist.size()-1).nodedepth = leveldepthlist.toString();



//
// System.out.println(
//                " a| " + (line) + "\t"
//                        + " b| " + sfe_arraylist.get(sfe_arraylist.size()-1).nodelevel + "\t"
//                        + " c| " + sfe_arraylist.get(sfe_arraylist.size()-1).nodename + "\t"
//                        + " d| " + sfe_arraylist.get(sfe_arraylist.size()-1).nodevalue + "\t"
//                        + " e| " + sfe_arraylist.get(sfe_arraylist.size()-1).nodeparent + "\t"
//                        + " f| " + sfe_arraylist.get(sfe_arraylist.size()-1).openorclose + "\t"
//        );


//    private static String standardizeNodeName(String nn) {
//        nn = StringUtils.replaceEach(nn, new String[]
//                        {
//                                "/"
//                                , " "
//                                , "#"
//                                , "|"
//                                , "'"
//                                , "\""
//                                , "("
//                                , ")"
//                                , "<"
//                                , ">"
//                                , "="
//                                , "{"
//                                , "}"
//                                , "\\"
//                                , "["
//                                , "]"
//                                , "\u0011"
//                        }
//                , new String[]
//                        {
//                                "_..forwardslash.._"
//                                , "_..space.._"
//                                , "_..pound.._"
//                                , "_..pipe.._"
//                                , "_..singlequote.._"
//                                , "_..doublequote.._"
//                                , "_..leftparenthesis.._"
//                                , "_..rightparenthesis.._"
//                                , "_..leftanglebracket.._"
//                                , "_..rightanglebracket.._"
//                                , "_..equalsign.._"
//                                , "_..leftsquiggle.._"
//                                , "_..rightsquiggle.._"
//                                , "_..backslash.._"
//                                , "_..leftsquarebrace.._"
//                                , "_..rightsquarebrace.._"
//                                , "_..controlcharacter.._"
//                        }
//        );
//
//        return nn;
//    }